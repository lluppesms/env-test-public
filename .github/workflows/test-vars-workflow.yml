# ------------------------------------------------------------------------------------------------------------------------
# Action: Deploy infra, then build and deploy one container app module
# ------------------------------------------------------------------------------------------------------------------------
  name: Test Variables in Repo and Environments

  on:
    workflow_dispatch:
      inputs:
        deployEnvironment:
          description: 'Environment'
          required: true
          default: 'dev'
          type: choice
          options:
            - dev
            - qa
            - prod
  
  # ------------------------------------------------------------------------------------------------------------------------
  env:
    # these are defined by the project itself, so they can stay here...
    JOB_LEVEL_VAR: 'myjob'
  
  # ------------------------------------------------------------------------------------------------------------------------
  jobs:
    template-env:
      # You can't pass environment variables to templates, so put them in outputs here that you CAN pass
      name: Template Env Variables
      runs-on: ubuntu-latest
      environment: ${{ inputs.deployEnvironment }}
      outputs:
        PROJECT_ROOT: ${{ github.workspace }}
        ENV_CODE: ${{ inputs.deployEnvironment }}
        
        VAR_APP_NAME_ENV: ${{ vars.APP_NAME_ENV }}
        VAR_APP_NAME_REPO: ${{ vars.APP_NAME_REPO }}
        ENV_JOB_LEVEL_VAR: ${{ env.JOB_LEVEL_VAR }}

        RESOURCEGROUP_PREFIX: ${{ vars.RESOURCEGROUP_PREFIX }}
        RESOURCEGROUP_LOCATION: ${{ vars.RESOURCEGROUP_LOCATION }}

      steps:
        - name: Set common environment variables
          id: set-env
          run: |
            echo "PROJECT_ROOT               = ${{ github.workspace }}"
            echo "inputs.ENV_CODE            = ${{ inputs.deployEnvironment }}"
            echo "var.APP_NAME_ENV           = ${{ vars.APP_NAME_ENV }}"
            echo "var.APP_NAME_REPO          = ${{ vars.APP_NAME_REPO }}"
            echo "env.JOB_LEVEL_VAR          = ${{ env.JOB_LEVEL_VAR }}"
            echo "env.RESOURCEGROUP_PREFIX   = ${{ vars.RESOURCEGROUP_PREFIX }}"
            echo "env.RESOURCEGROUP_LOCATION = ${{ vars.RESOURCEGROUP_LOCATION }}"

    task-test:
      name: Show Variables Job
      runs-on: ubuntu-latest
      environment: ${{ inputs.deployEnvironment }}
      needs:
        - template-env
      steps:
        - name: Display Variables Task
          run: |-
            echo "var.APP_NAME_ENV                          = ${{ vars.APP_NAME_ENV }}"
            echo "var.APP_NAME_REPO                         = ${{ vars.APP_NAME_REPO }}"
            echo "env.JOB_LEVEL_VAR                         = ${{ env.JOB_LEVEL_VAR }}"
            echo "env.RESOURCEGROUP_PREFIX                  = ${{ vars.RESOURCEGROUP_PREFIX }}"
            echo "env.RESOURCEGROUP_LOCATION                = ${{ vars.RESOURCEGROUP_LOCATION }}"

            echo "steps.template-env.PROJECT_ROOT           = ${{ needs.template-env.outputs.PROJECT_ROOT }}"
            echo "steps.template-env.ENV_CODE               = ${{ needs.template-env.outputs.ENV_CODE }}"
            echo "steps.template-env.VAR_APP_NAME_ENV       = ${{ needs.template-env.outputs.VAR_APP_NAME_ENV }}"
            echo "steps.template-env.VAR_APP_NAME_REPO      = ${{ needs.template-env.outputs.VAR_APP_NAME_REPO }}"
            echo "steps.template-env.ENV_JOB_LEVEL_VAR      = ${{ needs.template-env.outputs.ENV_JOB_LEVEL_VAR }}"
            echo "steps.template-env.RESOURCEGROUP_PREFIX   = ${{ needs.template-env.outputs.RESOURCEGROUP_PREFIX }}"
            echo "steps.template-env.RESOURCEGROUP_LOCATION = ${{ needs.template-env.outputs.RESOURCEGROUP_LOCATION }}"

            echo "---------------------------------"
            echo "##[group]All Variables:"
            echo "Environment:"
            echo '${{ toJSON(env) }}'
            echo "Variables:"
            echo '${{ toJSON(vars) }}'
            echo "Secrets:"
            echo '${{ toJSON(secrets) }}'
            echo "Inputs:"
            echo '${{ toJSON(inputs) }}'
            echo "Needs:"
            echo '${{ toJSON(needs.template-env.outputs) }}'
            echo "##[endgroup]"

            echo "---------------------------------"
            echo "##[group]Directory of ${{ github.workspace  }}"
            tree -R ${{ github.workspace  }}
            echo "##[endgroup]"
          continue-on-error: true
  
    template-test:
      name: Template Test ${{ inputs.deployEnvironment }}
      uses: ./.github/workflows/template-vars.yml
      needs:
        - template-env
      secrets: inherit
      with:
        PROJECT_ROOT: ${{ needs.template-env.outputs.PROJECT_ROOT }}
        ENVIRONMENT_NAME: ${{ inputs.deployEnvironment }}
        ENV_CODE: ${{ needs.template-env.outputs.ENV_CODE }}
        APP_NAME_ENV: ${{ needs.template-env.outputs.VAR_APP_NAME_ENV }}
        APP_NAME_REPO: ${{ needs.template-env.outputs.VAR_APP_NAME_REPO }}
        RESOURCEGROUP_PREFIX: ${{ needs.template-env.outputs.RESOURCEGROUP_PREFIX }}
        RESOURCEGROUP_LOCATION: ${{ needs.template-env.outputs.RESOURCEGROUP_LOCATION }}
        #JOB_LEVEL_VAR: ${{ needs.template-env.outputs.ENV_JOB_LEVEL_VAR }}

